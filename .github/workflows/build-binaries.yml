name: Build Binaries

on:
  push:
    branches:
      - main

jobs:
  build-linux-appimage:
    name: Build Linux AppImage (x64)
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: x86_64-unknown-linux-gnu

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y libgtk-3-dev libxcb-render0-dev libxcb-shape0-dev libxcb-xfixes0-dev libxkbcommon-dev libssl-dev

      - name: Cache cargo registry
        uses: actions/cache@v4
        with:
          path: ~/.cargo/registry
          key: ${{ runner.os }}-cargo-registry-${{ hashFiles('**/Cargo.lock') }}

      - name: Cache cargo index
        uses: actions/cache@v4
        with:
          path: ~/.cargo/git
          key: ${{ runner.os }}-cargo-git-${{ hashFiles('**/Cargo.lock') }}

      - name: Cache cargo build
        uses: actions/cache@v4
        with:
          path: target
          key: ${{ runner.os }}-cargo-build-target-${{ hashFiles('**/Cargo.lock') }}

      - name: Build release binary
        run: cargo build --release --target x86_64-unknown-linux-gnu

      - name: Install AppImage tools
        run: |
          wget -O /tmp/appimagetool https://github.com/AppImage/AppImageKit/releases/download/continuous/appimagetool-x86_64.AppImage
          chmod +x /tmp/appimagetool

      - name: Create AppImage structure
        run: |
          mkdir -p AppDir/usr/bin
          mkdir -p AppDir/usr/share/applications
          mkdir -p AppDir/usr/share/icons/hicolor/256x256/apps
          
          # Copy binary
          cp target/x86_64-unknown-linux-gnu/release/pubky-wiki AppDir/usr/bin/
          
          # Create desktop file
          cat > AppDir/usr/share/applications/pubky-wiki.desktop << 'EOF'
          [Desktop Entry]
          Name=Pubky Wiki
          Exec=pubky-wiki
          Icon=pubky-wiki
          Type=Application
          Categories=Utility;
          EOF
          
          # Create a simple icon (placeholder - would be replaced with actual icon)
          touch AppDir/usr/share/icons/hicolor/256x256/apps/pubky-wiki.png
          
          # Create AppRun
          cat > AppDir/AppRun << 'EOF'
          #!/bin/bash
          SELF=$(readlink -f "$0")
          HERE=${SELF%/*}
          export PATH="${HERE}/usr/bin/:${PATH}"
          exec "${HERE}/usr/bin/pubky-wiki" "$@"
          EOF
          chmod +x AppDir/AppRun
          
          # Symlink desktop file and icon to root
          ln -s usr/share/applications/pubky-wiki.desktop AppDir/
          ln -s usr/share/icons/hicolor/256x256/apps/pubky-wiki.png AppDir/

      - name: Build AppImage
        run: |
          /tmp/appimagetool --appimage-extract-and-run AppDir pubky-wiki-x86_64.AppImage

      - name: Upload AppImage artifact
        uses: actions/upload-artifact@v4
        with:
          name: pubky-wiki-linux-x86_64-appimage
          path: pubky-wiki-x86_64.AppImage

  build-macos-arm:
    name: Build macOS Binary (arm64)
    runs-on: macos-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: aarch64-apple-darwin

      - name: Cache cargo registry
        uses: actions/cache@v4
        with:
          path: ~/.cargo/registry
          key: ${{ runner.os }}-cargo-registry-${{ hashFiles('**/Cargo.lock') }}

      - name: Cache cargo index
        uses: actions/cache@v4
        with:
          path: ~/.cargo/git
          key: ${{ runner.os }}-cargo-git-${{ hashFiles('**/Cargo.lock') }}

      - name: Cache cargo build
        uses: actions/cache@v4
        with:
          path: target
          key: ${{ runner.os }}-cargo-build-target-${{ hashFiles('**/Cargo.lock') }}

      - name: Build release binary
        run: cargo build --release --target aarch64-apple-darwin

      - name: Upload macOS binary artifact
        uses: actions/upload-artifact@v4
        with:
          name: pubky-wiki-macos-arm64
          path: target/aarch64-apple-darwin/release/pubky-wiki
